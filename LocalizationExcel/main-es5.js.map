{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/download/download.component.ts","webpack:///src/app/download/download.component.html","webpack:///src/app/downloadjson.service.ts","webpack:///src/app/get-excel.service.ts","webpack:///src/app/key-value.service.ts","webpack:///src/app/set-excel.service.ts","webpack:///src/app/tojson.service.ts","webpack:///src/app/upload/upload.component.ts","webpack:///src/app/upload/upload.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","router","signal","flag","tryCatch","initializeSheet","navigate","declarations","providers","bootstrap","callback","console","error","Excel","run","context","sheet","workbook","worksheets","getItemOrNullObject","sync","isNullObject","add","activate","table","tables","DownloadComponent","keyValueToJason","keyValueService","setExcel","readExcel","downloadService","header","body","getData","log","file_no","file_name","filedata","map","element","data","downloadItems","getJsonFromKeyValuePairs","length","event","filesData","fileNames","fileObject","uploadedFile","target","files","existingFiles","indexCommonfiles","push","file","fileName","name","replace","findIndex","i","getMultipleObjects","readUploadedFile","fileReader","FileReader","fileContent","readAsText","onload","result","JSON","parse","newData","key","Object","values","createSheetAndTable","getExcel","fileChanged","DownloadJsonService","stringdata","stringify","undefined","blob","Blob","type","window","URL","createObjectURL","jsondata","filename","fileUrl","getURL","link","document","createElement","download","href","click","remove","providedIn","GetExcelService","getItem","localizationTable","headerRange","getHeaderRowRange","load","bodyRange","getDataBodyRange","forEach","KeyValueService","http","keyValues","json","getMultipleKeyValue","pop","toString","split","join","keyExists","find","keyValue","SetExcelService","delete","ch","String","fromCharCode","rows","sort","apply","ascending","getUsedRange","format","autofitColumns","autofitRows","KeyValueToJason","emptyObject","x","createJSON","value","keysArray","last_index","index","UploadComponent","keyValueToJson","environment","production","Office","onReady","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { DownloadComponent } from './download/download.component';\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:'default',component:AppComponent},\r\n  {path:'upload', component:UploadComponent},\r\n  {path:'download',component:DownloadComponent},\r\n  {path: '', redirectTo: '/default', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'localizationExcel';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DownloadComponent } from './download/download.component';\r\nimport { Router } from '@angular/router';\r\nimport { delay } from 'q';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UploadComponent,\r\n    DownloadComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  signal: object = { flag: true };\r\n  constructor(private router: Router) {\r\n    tryCatch(initializeSheet(this.signal).then(() => {\r\n      if (this.signal['flag'] == false) {\r\n        this.router.navigate(['download']);\r\n      }\r\n      else{\r\n        this.router.navigate(['upload']);\r\n      }\r\n    }));\r\n  }\r\n}\r\nasync function tryCatch(callback) {\r\n  try {\r\n    await callback;\r\n  } catch (error) {\r\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\r\n    console.error(error);\r\n  }\r\n}\r\nasync function initializeSheet(signal: object) {\r\n  await Excel.run(async (context) => {\r\n    let sheet = context.workbook.worksheets.getItemOrNullObject(\"LocalizationSheet\");\r\n    await context.sync().then(async () => {\r\n      if (sheet.isNullObject) {\r\n        sheet = context.workbook.worksheets.add(\"LocalizationSheet\");\r\n        sheet.activate();\r\n        await context.sync();\r\n      }\r\n      else {\r\n        sheet.activate();\r\n        const table = sheet.tables.getItemOrNullObject(\"LocalizationTable\");\r\n        await context.sync().then(() => {\r\n          if (table.isNullObject) {\r\n            signal['flag'] = true;\r\n          } else {\r\n            signal['flag'] = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { KeyValuePairMultipleFile } from '../KeyValue';\r\nimport { KeyValueToJason } from '../tojson.service';\r\nimport { DownloadJsonService } from '../downloadjson.service';\r\nimport { Router } from '@angular/router';\r\nimport { KeyValueService } from '../key-value.service';\r\nimport { SetExcelService } from '../set-excel.service';\r\nimport { GetExcelService } from '../get-excel.service';\r\n\r\n@Component({\r\n  selector: 'app-download',\r\n  templateUrl: './download.component.html',\r\n  styleUrls: ['./download.component.css']\r\n})\r\nexport class DownloadComponent implements OnInit {\r\n  filesData: KeyValuePairMultipleFile[];\r\n  fileNames: string[];\r\n  uploadedFile: any;\r\n  constructor(private keyValueToJason: KeyValueToJason,\r\n    private keyValueService: KeyValueService,\r\n    private setExcel: SetExcelService,\r\n    private readExcel: GetExcelService,\r\n    private downloadService: DownloadJsonService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  back() {\r\n    this.router.navigate(['upload']);\r\n  }\r\n  getExcel() {\r\n    let header = [];\r\n    let body = [];\r\n    tryCatch(this.readExcel.getData(header, body).then(() => {\r\n      console.log(header);\r\n      for (let file_no = 1; file_no < header.length; file_no++) {\r\n        const file_name = header[file_no];\r\n        const filedata = body.map(element => {\r\n          let data = {};\r\n          data[\"key\"] = element[0];\r\n          data['values'] = {};\r\n          data['values'][file_name] = element[file_no];\r\n          return (<KeyValuePairMultipleFile>data);\r\n        });\r\n        console.log(\"Test \" + file_no);\r\n        this.downloadService.downloadItems(this.keyValueToJason.getJsonFromKeyValuePairs(filedata)[file_name], file_name);\r\n      }\r\n    }))\r\n  }\r\n  fileChanged(event) {\r\n    this.filesData = [];\r\n    this.fileNames = [];\r\n    let fileObject = {};\r\n    let header = [];\r\n    let body = [];\r\n    console.log(\"file uploaded\");\r\n    tryCatch(this.readExcel.getData(header, body).then(() => {\r\n      this.uploadedFile = event.target.files;\r\n      let existingFiles = [];\r\n      let indexCommonfiles = [];\r\n      for (let file_no = 1; file_no < header.length; file_no++) {\r\n        const file_name = header[file_no];\r\n        this.fileNames.push(file_name);\r\n        fileObject[file_name] = \"\";\r\n        const filedata = body.map(element => {\r\n          let data = {};\r\n          data[\"key\"] = element[0];\r\n          data['values'] = {};\r\n          data['values'][file_name] = element[file_no];\r\n          return (<KeyValuePairMultipleFile>data);\r\n        });\r\n        console.log(\"Test \" + file_no);\r\n        existingFiles.push(this.keyValueToJason.getJsonFromKeyValuePairs(filedata)[file_name]);\r\n      }\r\n      for (let file of this.uploadedFile) {\r\n        const fileName = file.name.replace('.json', '');\r\n        if (this.fileNames.findIndex(element => element == fileName) == -1) {\r\n          this.fileNames.push(fileName);\r\n          fileObject[fileName] = \"\";\r\n        }\r\n        else {\r\n          indexCommonfiles.push(this.fileNames.findIndex(element => element == fileName));\r\n        }\r\n      }\r\n      for (let i = 0; i < existingFiles.length; i++) {\r\n        if (indexCommonfiles.findIndex(element=>element===i)===-1) {\r\n          this.keyValueService.getMultipleObjects(this.filesData, existingFiles[i], this.fileNames[i], fileObject);\r\n        }\r\n      }\r\n      for (let file of this.uploadedFile) {\r\n        const fileName = file.name.replace('.json', '');\r\n        this.readUploadedFile(file, fileName, fileObject);\r\n      }\r\n    }))\r\n  }\r\n  readUploadedFile(file, fileName, fileObject) {\r\n    let fileReader = new FileReader();\r\n    let fileContent: any = '';\r\n    fileReader.readAsText(file);\r\n    fileReader.onload = (e) => {\r\n      fileContent = fileReader.result;\r\n      console.log(\"in File Upload\");\r\n      this.keyValueService.getMultipleObjects(this.filesData, JSON.parse(fileContent), fileName, fileObject);\r\n      const newData = this.filesData.map(element => [element.key, ...Object.values(element.values)]);\r\n      tryCatch(this.setExcel.createSheetAndTable(newData, this.fileNames));\r\n    }\r\n  }\r\n}\r\nasync function tryCatch(callback) {\r\n  try {\r\n    await callback;\r\n  } catch (error) {\r\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\r\n    console.error(error);\r\n  }\r\n}\r\n// async function getData(header, body) {\r\n//   await Excel.run(async (context) => {\r\n//     const sheet = context.workbook.worksheets.getItem(\"LocalizationSheet\");\r\n//     const localizationTable = sheet.tables.getItem(\"LocalizationTable\");\r\n\r\n//     const headerRange = localizationTable.getHeaderRowRange().load(\"values\");\r\n//     const bodyRange = localizationTable.getDataBodyRange().load(\"values\");\r\n//     await sheet.context.sync();\r\n\r\n//     headerRange.values[0].forEach(element => header.push(element));\r\n//     bodyRange.values.forEach(element => body.push(element));\r\n//     await context.sync();\r\n//   });\r\n// }\r\n// function downloadItems(jsondata, filename) {\r\n//   const urlservice = new DownloadJsonService();\r\n//   const fileUrl = urlservice.getURL(jsondata);\r\n//   let link = document.createElement(\"a\");\r\n//   link.download = filename + \".json\";\r\n//   link.href = fileUrl;\r\n//   link.click();\r\n//   link.remove();\r\n// }\r\n","<div class=\"flex h-screen items-center text-center w-full\">\r\n  <table class='table-fixed '>\r\n    <tbody>\r\n      <tr class='bg-gray-100'>\r\n        <td class='border px-6 py-4'>\r\n          <div>\r\n            <div class=\"text-gray-700 text-xl\">Download Your Localized Json Files</div>\r\n          </div>\r\n          <button (click)='getExcel()' class=\"bg-blue-600 text-white hover:bg-blue-700 px-4 rounded py-2\"><i\r\n              class=\"ms-Icon ms-Icon--DownloadDocument mr-2\"></i>Download</button>\r\n        </td>\r\n      </tr>\r\n      <tr class=\"row\">\r\n        <td class=\"border px-6 py-4\">\r\n          <div>\r\n            <div class=\"text-gray-700 text-xl\">Update Column or Add New Column Using Json</div>\r\n          </div>\r\n          <div class=\"flex justify-around py-4\">\r\n            <button class=\"bg-blue-600 text-white hover:bg-blue-700 px-4 rounded py-2 flex\"\r\n              (click)=\"fileInputCtrl.click()\">\r\n              <i class=\"ms-Icon ms-Icon--BulkUpload mr-2\"></i>Upload\r\n            </button>\r\n          </div>\r\n          <input #fileInputCtrl style=\"visibility: hidden;\" type='file' accept=\".json\" (change)=\"fileChanged($event)\"\r\n            multiple>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DownloadJsonService {\r\n  constructor() { };\r\n  private getURL(data: Object): any {\r\n    const stringdata = JSON.stringify(data, undefined, 4);\r\n    const blob = new Blob([stringdata], { type: 'application/octet-stream' });\r\n    return (window.URL.createObjectURL(blob));\r\n  }\r\n  downloadItems(jsondata, filename) {\r\n    const fileUrl = this.getURL(jsondata);\r\n    let link = document.createElement(\"a\");\r\n    link.download = filename + \".json\";\r\n    link.href = fileUrl;\r\n    link.click();\r\n    link.remove();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetExcelService {\r\n\r\n  constructor() { }\r\n  async getData(header, body) {\r\n    await Excel.run(async (context) => {\r\n      const sheet = context.workbook.worksheets.getItem(\"LocalizationSheet\");\r\n      const localizationTable = sheet.tables.getItem(\"LocalizationTable\");\r\n\r\n      const headerRange = localizationTable.getHeaderRowRange().load(\"values\");\r\n      const bodyRange = localizationTable.getDataBodyRange().load(\"values\");\r\n      await sheet.context.sync();\r\n\r\n      headerRange.values[0].forEach(element => header.push(element));\r\n      bodyRange.values.forEach(element => body.push(element));\r\n      await context.sync();\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { KeyValuePair, KeyValuePairMultipleFile } from './KeyValue';\r\nimport { element } from 'protractor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeyValueService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  getMultipleObjects(keyValues: KeyValuePairMultipleFile[], json: any, fileName: string, fileObject) {\r\n    const keys: Array<string> = [];\r\n    this.getMultipleKeyValue(fileName, json, keys, keyValues, fileObject);\r\n    return keyValues;\r\n  }\r\n  getMultipleKeyValue(fileName: string, json, keys: string[], keyValues: KeyValuePairMultipleFile[], fileObject) {\r\n    for (let i in json) {\r\n      if (json[i] instanceof Object) {\r\n        keys.push(i);\r\n        this.getMultipleKeyValue(fileName, json[i], keys, keyValues, fileObject);\r\n        keys.pop();\r\n      } else {\r\n        keys.push(i);\r\n        const key = keys.toString().split(',').join('.');\r\n        const keyExists = keyValues.find(element => element.key == key);\r\n\r\n        if (keyExists == undefined) {\r\n          let values = JSON.parse(JSON.stringify(fileObject));\r\n          values[fileName] = json[i].toString();\r\n          const keyValue: KeyValuePairMultipleFile = { key, values };\r\n          keyValues.push(keyValue);\r\n        } else {\r\n          keyExists.values[fileName] = json[i].toString();\r\n        }\r\n        keys.pop();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetExcelService {\n\n  constructor() { }\n  async createSheetAndTable(data: any[][], fileNames: string[]) {\n    await Excel.run(async (context) => {\n      context.workbook.worksheets.getItemOrNullObject(\"LocalizationSheet\").delete();\n      const sheet = context.workbook.worksheets.add(\"LocalizationSheet\");\n      const ch = String.fromCharCode(65 + fileNames.length);\n      console.log(ch);\n      const localizationTable = sheet.tables.add(`A1:${ch}1`, true /*hasHeaders*/);\n      localizationTable.name = \"LocalizationTable\";\n      localizationTable.getHeaderRowRange().values = [[\"Key\", ...fileNames]];\n      localizationTable.rows.add(null, data);\n      localizationTable.getDataBodyRange().sort.apply([{\n        key:0,\n        ascending:true\n      }]);\n      sheet.getUsedRange().format.autofitColumns();\n      sheet.getUsedRange().format.autofitRows();\n      sheet.activate();\n      await context.sync();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\n//import { rootCertificates } from 'tls';\r\nimport { KeyValuePairMultipleFile } from './KeyValue';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class KeyValueToJason{\r\n  getJsonFromKeyValuePairs(keyValues: KeyValuePairMultipleFile[]) {\r\n    const emptyObject = {};\r\n    if (keyValues.length > 0) {\r\n      for(let x in keyValues[0].values){\r\n        emptyObject[x]={};\r\n      }\r\n      keyValues.forEach(element => {\r\n        for (let x in element.values) {\r\n          if(element.values[x]!=\"\"){\r\n          this.createJSON(emptyObject[x],element.key, element.values[x]);\r\n          }\r\n        }\r\n      })\r\n    }\r\n    return emptyObject;\r\n  }\r\n\r\n  createJSON(json, keys: string, value: string) {\r\n    const keysArray = keys.split('.');\r\n    const last_index = keysArray.length - 1;\r\n    keysArray.forEach((key: string, index: number) => {\r\n      if (index == last_index) {\r\n        json[key] = value;\r\n      }\r\n      else {\r\n        if (!(key in json)) {\r\n          json[key] = {};\r\n        }\r\n        json = json[key];\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { KeyValueService } from '../key-value.service';\r\nimport { KeyValuePairMultipleFile } from '../KeyValue';\r\nimport { element } from 'protractor';\r\nimport { KeyValueToJason } from '../tojson.service';\r\nimport { DownloadJsonService } from '../downloadjson.service';\r\nimport { Router } from '@angular/router';\r\nimport { SetExcelService } from '../set-excel.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css'],\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  filesData: KeyValuePairMultipleFile[];\r\n  uploadedFile: any;\r\n  fileNames: string[];\r\n  constructor(private keyValueService: KeyValueService, private keyValueToJson: KeyValueToJason,private setExcel:SetExcelService,\r\n    private router:Router) {\r\n      console.log(\"Hello\");\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n  fileChanged(event) {\r\n    this.filesData = [];\r\n    this.fileNames = [];\r\n    let fileObject = {};\r\n    this.uploadedFile = event.target.files;\r\n    for (let file of this.uploadedFile) {\r\n      const fileName = file.name.replace('.json', '');\r\n      this.fileNames.push(fileName);\r\n      fileObject[fileName] = \"\";\r\n    }\r\n    for (let file of this.uploadedFile) {\r\n      const fileName = file.name.replace('.json', '');\r\n      this.readUploadedFile(file, fileName, fileObject);\r\n    }\r\n    this.router.navigate(['download']);\r\n  }\r\n  readUploadedFile(file, fileName, fileObject) {\r\n    let fileReader = new FileReader();\r\n    let fileContent: any = '';\r\n    fileReader.readAsText(file);\r\n    fileReader.onload = (e) => {\r\n      fileContent = fileReader.result;\r\n      this.keyValueService.getMultipleObjects(this.filesData, JSON.parse(fileContent), fileName, fileObject);\r\n      const newData = this.filesData.map(element => [element.key, ...Object.values(element.values)]);\r\n      tryCatch(this.setExcel.createSheetAndTable(newData, this.fileNames));\r\n    }\r\n  }\r\n}\r\nasync function tryCatch(callback) {\r\n  try {\r\n    await callback;\r\n  } catch (error) {\r\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\r\n    console.error(error);\r\n  }\r\n}\r\n","<div class=\"flex h-screen items-center text-center w-full\">\r\n  <div class=\"w-full\">\r\n    <div>\r\n      <i style=\"font-size: 150px\" class=\"ms-Icon ms-Icon--BulkUpload text-gray-300\"></i>\r\n      <div class=\"text-gray-700 text-xl\">Upload localized json files</div>\r\n    </div>\r\n\r\n    <div class=\"flex justify-around py-4\">\r\n      <button class=\"bg-blue-600 text-white hover:bg-blue-700 px-4 rounded py-2 flex\" (click)=\"fileInputCtrl.click()\">\r\n        <i class=\"ms-Icon ms-Icon--Upload mr-2\"></i>Upload\r\n      </button>\r\n    </div>\r\n    <input #fileInputCtrl style=\"visibility: hidden;\" type='file' accept=\".json\" (change)=\"fileChanged($event)\" multiple>\r\n    <!--p *ngFor='let fileName of uploadedFile'>\r\n    {{fileName.name}}\r\n  </p-->\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n/*platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));*/\n/*Office.initialize = () => {\n  platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(error => console.error(error));\n};*/\nOffice.onReady(\n  () => {\n    platformBrowserDynamic()\n      .bootstrapModule(AppModule)\n      .catch(error => console.error(error));}\n);\n"]}