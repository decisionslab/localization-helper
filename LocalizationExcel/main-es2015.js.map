{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/download/download.component.ts","./src/app/download/download.component.html","./src/app/downloadjson.service.ts","./src/app/get-excel.service.ts","./src/app/key-value.service.ts","./src/app/set-excel.service.ts","./src/app/tojson.service.ts","./src/app/upload/upload.component.ts","./src/app/upload/upload.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { DownloadComponent } from './download/download.component';\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:'default',component:AppComponent},\r\n  {path:'upload', component:UploadComponent},\r\n  {path:'download',component:DownloadComponent},\r\n  {path: '', redirectTo: '/default', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'localizationExcel';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DownloadComponent } from './download/download.component';\r\nimport { Router } from '@angular/router';\r\nimport { delay } from 'q';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UploadComponent,\r\n    DownloadComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  signal: object = { flag: true };\r\n  constructor(private router: Router) {\r\n    tryCatch(initializeSheet(this.signal).then(() => {\r\n      if (this.signal['flag'] == false) {\r\n        this.router.navigate(['download']);\r\n      }\r\n      else{\r\n        this.router.navigate(['upload']);\r\n      }\r\n    }));\r\n  }\r\n}\r\nasync function tryCatch(callback) {\r\n  try {\r\n    await callback;\r\n  } catch (error) {\r\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\r\n    console.error(error);\r\n  }\r\n}\r\nasync function initializeSheet(signal: object) {\r\n  await Excel.run(async (context) => {\r\n    let sheet = context.workbook.worksheets.getItemOrNullObject(\"LocalizationSheet\");\r\n    await context.sync().then(async () => {\r\n      if (sheet.isNullObject) {\r\n        sheet = context.workbook.worksheets.add(\"LocalizationSheet\");\r\n        sheet.activate();\r\n        await context.sync();\r\n      }\r\n      else {\r\n        sheet.activate();\r\n        const table = sheet.tables.getItemOrNullObject(\"LocalizationTable\");\r\n        await context.sync().then(() => {\r\n          if (table.isNullObject) {\r\n            signal['flag'] = true;\r\n          } else {\r\n            signal['flag'] = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { KeyValuePairMultipleFile } from '../KeyValue';\r\nimport { KeyValueToJason } from '../tojson.service';\r\nimport { DownloadJsonService } from '../downloadjson.service';\r\nimport { Router } from '@angular/router';\r\nimport { KeyValueService } from '../key-value.service';\r\nimport { SetExcelService } from '../set-excel.service';\r\nimport { GetExcelService } from '../get-excel.service';\r\n\r\n@Component({\r\n  selector: 'app-download',\r\n  templateUrl: './download.component.html',\r\n  styleUrls: ['./download.component.css']\r\n})\r\nexport class DownloadComponent implements OnInit {\r\n  filesData: KeyValuePairMultipleFile[];\r\n  fileNames: string[];\r\n  uploadedFile: any;\r\n  constructor(private keyValueToJason: KeyValueToJason,\r\n    private keyValueService: KeyValueService,\r\n    private setExcel: SetExcelService,\r\n    private readExcel: GetExcelService,\r\n    private downloadService: DownloadJsonService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  back() {\r\n    this.router.navigate(['upload']);\r\n  }\r\n  getExcel() {\r\n    let header = [];\r\n    let body = [];\r\n    tryCatch(this.readExcel.getData(header, body).then(() => {\r\n      console.log(header);\r\n      for (let file_no = 1; file_no < header.length; file_no++) {\r\n        const file_name = header[file_no];\r\n        const filedata = body.map(element => {\r\n          let data = {};\r\n          data[\"key\"] = element[0];\r\n          data['values'] = {};\r\n          data['values'][file_name] = element[file_no];\r\n          return (<KeyValuePairMultipleFile>data);\r\n        });\r\n        console.log(\"Test \" + file_no);\r\n        this.downloadService.downloadItems(this.keyValueToJason.getJsonFromKeyValuePairs(filedata)[file_name], file_name);\r\n      }\r\n    }))\r\n  }\r\n  fileChanged(event) {\r\n    this.filesData = [];\r\n    this.fileNames = [];\r\n    let fileObject = {};\r\n    let header = [];\r\n    let body = [];\r\n    console.log(\"file uploaded\");\r\n    tryCatch(this.readExcel.getData(header, body).then(() => {\r\n      this.uploadedFile = event.target.files;\r\n      let existingFiles = [];\r\n      let indexCommonfiles = [];\r\n      for (let file_no = 1; file_no < header.length; file_no++) {\r\n        const file_name = header[file_no];\r\n        this.fileNames.push(file_name);\r\n        fileObject[file_name] = \"\";\r\n        const filedata = body.map(element => {\r\n          let data = {};\r\n          data[\"key\"] = element[0];\r\n          data['values'] = {};\r\n          data['values'][file_name] = element[file_no];\r\n          return (<KeyValuePairMultipleFile>data);\r\n        });\r\n        console.log(\"Test \" + file_no);\r\n        existingFiles.push(this.keyValueToJason.getJsonFromKeyValuePairs(filedata)[file_name]);\r\n      }\r\n      for (let file of this.uploadedFile) {\r\n        const fileName = file.name.replace('.json', '');\r\n        if (this.fileNames.findIndex(element => element == fileName) == -1) {\r\n          this.fileNames.push(fileName);\r\n          fileObject[fileName] = \"\";\r\n        }\r\n        else {\r\n          indexCommonfiles.push(this.fileNames.findIndex(element => element == fileName));\r\n        }\r\n      }\r\n      for (let i = 0; i < existingFiles.length; i++) {\r\n        if (!(i in indexCommonfiles)) {\r\n          this.keyValueService.getMultipleObjects(this.filesData, existingFiles[i], this.fileNames[i], fileObject);\r\n        }\r\n      }\r\n      for (let file of this.uploadedFile) {\r\n        const fileName = file.name.replace('.json', '');\r\n        this.readUploadedFile(file, fileName, fileObject);\r\n      }\r\n    }))\r\n  }\r\n  readUploadedFile(file, fileName, fileObject) {\r\n    let fileReader = new FileReader();\r\n    let fileContent: any = '';\r\n    fileReader.readAsText(file);\r\n    fileReader.onload = (e) => {\r\n      fileContent = fileReader.result;\r\n      console.log(\"in File Upload\");\r\n      this.keyValueService.getMultipleObjects(this.filesData, JSON.parse(fileContent), fileName, fileObject);\r\n      const newData = this.filesData.map(element => [element.key, ...Object.values(element.values)]);\r\n      tryCatch(this.setExcel.createSheetAndTable(newData, this.fileNames));\r\n    }\r\n  }\r\n}\r\nasync function tryCatch(callback) {\r\n  try {\r\n    await callback;\r\n  } catch (error) {\r\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\r\n    console.error(error);\r\n  }\r\n}\r\n// async function getData(header, body) {\r\n//   await Excel.run(async (context) => {\r\n//     const sheet = context.workbook.worksheets.getItem(\"LocalizationSheet\");\r\n//     const localizationTable = sheet.tables.getItem(\"LocalizationTable\");\r\n\r\n//     const headerRange = localizationTable.getHeaderRowRange().load(\"values\");\r\n//     const bodyRange = localizationTable.getDataBodyRange().load(\"values\");\r\n//     await sheet.context.sync();\r\n\r\n//     headerRange.values[0].forEach(element => header.push(element));\r\n//     bodyRange.values.forEach(element => body.push(element));\r\n//     await context.sync();\r\n//   });\r\n// }\r\n// function downloadItems(jsondata, filename) {\r\n//   const urlservice = new DownloadJsonService();\r\n//   const fileUrl = urlservice.getURL(jsondata);\r\n//   let link = document.createElement(\"a\");\r\n//   link.download = filename + \".json\";\r\n//   link.href = fileUrl;\r\n//   link.click();\r\n//   link.remove();\r\n// }\r\n","<div class=\"flex h-screen items-center text-center w-full\">\r\n  <table class='table-fixed '>\r\n    <tbody>\r\n      <tr class='bg-gray-100'>\r\n        <td class='border px-6 py-4'>\r\n          <div>\r\n            <div class=\"text-gray-700 text-xl\">Download Your Localized Json Files</div>\r\n          </div>\r\n          <button (click)='getExcel()' class=\"bg-blue-600 text-white hover:bg-blue-700 px-4 rounded py-2\"><i\r\n              class=\"ms-Icon ms-Icon--DownloadDocument mr-2\"></i>Download</button>\r\n        </td>\r\n      </tr>\r\n      <tr class=\"row\">\r\n        <td class=\"border px-6 py-4\">\r\n          <div>\r\n            <div class=\"text-gray-700 text-xl\">Update Column or Add New Column Using Json</div>\r\n          </div>\r\n          <div class=\"flex justify-around py-4\">\r\n            <button class=\"bg-blue-600 text-white hover:bg-blue-700 px-4 rounded py-2 flex\"\r\n              (click)=\"fileInputCtrl.click()\">\r\n              <i class=\"ms-Icon ms-Icon--BulkUpload mr-2\"></i>Upload\r\n            </button>\r\n          </div>\r\n          <input #fileInputCtrl style=\"visibility: hidden;\" type='file' accept=\".json\" (change)=\"fileChanged($event)\"\r\n            multiple>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DownloadJsonService {\r\n  constructor() { };\r\n  private getURL(data: Object): any {\r\n    const stringdata = JSON.stringify(data, undefined, 4);\r\n    const blob = new Blob([stringdata], { type: 'application/octet-stream' });\r\n    return (window.URL.createObjectURL(blob));\r\n  }\r\n  downloadItems(jsondata, filename) {\r\n    const fileUrl = this.getURL(jsondata);\r\n    let link = document.createElement(\"a\");\r\n    link.download = filename + \".json\";\r\n    link.href = fileUrl;\r\n    link.click();\r\n    link.remove();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetExcelService {\r\n\r\n  constructor() { }\r\n  async getData(header, body) {\r\n    await Excel.run(async (context) => {\r\n      const sheet = context.workbook.worksheets.getItem(\"LocalizationSheet\");\r\n      const localizationTable = sheet.tables.getItem(\"LocalizationTable\");\r\n\r\n      const headerRange = localizationTable.getHeaderRowRange().load(\"values\");\r\n      const bodyRange = localizationTable.getDataBodyRange().load(\"values\");\r\n      await sheet.context.sync();\r\n\r\n      headerRange.values[0].forEach(element => header.push(element));\r\n      bodyRange.values.forEach(element => body.push(element));\r\n      await context.sync();\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { KeyValuePair, KeyValuePairMultipleFile } from './KeyValue';\r\nimport { element } from 'protractor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeyValueService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  getMultipleObjects(keyValues: KeyValuePairMultipleFile[], json: any, fileName: string, fileObject) {\r\n    const keys: Array<string> = [];\r\n    this.getMultipleKeyValue(fileName, json, keys, keyValues, fileObject);\r\n    return keyValues;\r\n  }\r\n  getMultipleKeyValue(fileName: string, json, keys: string[], keyValues: KeyValuePairMultipleFile[], fileObject) {\r\n    for (let i in json) {\r\n      if (json[i] instanceof Object) {\r\n        keys.push(i);\r\n        this.getMultipleKeyValue(fileName, json[i], keys, keyValues, fileObject);\r\n        keys.pop();\r\n      } else {\r\n        keys.push(i);\r\n        const key = keys.toString().split(',').join('.');\r\n        const keyExists = keyValues.find(element => element.key == key);\r\n\r\n        if (keyExists == undefined) {\r\n          let values = JSON.parse(JSON.stringify(fileObject));\r\n          values[fileName] = json[i].toString();\r\n          const keyValue: KeyValuePairMultipleFile = { key, values };\r\n          keyValues.push(keyValue);\r\n        } else {\r\n          keyExists.values[fileName] = json[i].toString();\r\n        }\r\n        keys.pop();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetExcelService {\n\n  constructor() { }\n  async createSheetAndTable(data: any[][], fileNames: string[]) {\n    await Excel.run(async (context) => {\n      context.workbook.worksheets.getItemOrNullObject(\"LocalizationSheet\").delete();\n      const sheet = context.workbook.worksheets.add(\"LocalizationSheet\");\n      const ch = String.fromCharCode(65 + fileNames.length);\n      console.log(ch);\n      const localizationTable = sheet.tables.add(`A1:${ch}1`, true /*hasHeaders*/);\n      localizationTable.name = \"LocalizationTable\";\n      localizationTable.getHeaderRowRange().values = [[\"Key\", ...fileNames]];\n      localizationTable.rows.add(null, data);\n      localizationTable.getDataBodyRange().sort.apply([{\n        key:0,\n        ascending:true\n      }]);\n      sheet.getUsedRange().format.autofitColumns();\n      sheet.getUsedRange().format.autofitRows();\n      sheet.activate();\n      await context.sync();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\n//import { rootCertificates } from 'tls';\r\nimport { KeyValuePairMultipleFile } from './KeyValue';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class KeyValueToJason{\r\n  getJsonFromKeyValuePairs(keyValues: KeyValuePairMultipleFile[]) {\r\n    const emptyObject = {};\r\n    if (keyValues.length > 0) {\r\n      for(let x in keyValues[0].values){\r\n        emptyObject[x]={};\r\n      }\r\n      keyValues.forEach(element => {\r\n        for (let x in element.values) {\r\n          if(element.values[x]!=\"\"){\r\n          this.createJSON(emptyObject[x],element.key, element.values[x]);\r\n          }\r\n        }\r\n      })\r\n    }\r\n    return emptyObject;\r\n  }\r\n\r\n  createJSON(json, keys: string, value: string) {\r\n    const keysArray = keys.split('.');\r\n    const last_index = keysArray.length - 1;\r\n    keysArray.forEach((key: string, index: number) => {\r\n      if (index == last_index) {\r\n        json[key] = value;\r\n      }\r\n      else {\r\n        if (!(key in json)) {\r\n          json[key] = {};\r\n        }\r\n        json = json[key];\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { KeyValueService } from '../key-value.service';\r\nimport { KeyValuePairMultipleFile } from '../KeyValue';\r\nimport { element } from 'protractor';\r\nimport { KeyValueToJason } from '../tojson.service';\r\nimport { DownloadJsonService } from '../downloadjson.service';\r\nimport { Router } from '@angular/router';\r\nimport { SetExcelService } from '../set-excel.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css'],\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  filesData: KeyValuePairMultipleFile[];\r\n  uploadedFile: any;\r\n  fileNames: string[];\r\n  constructor(private keyValueService: KeyValueService, private keyValueToJson: KeyValueToJason,private setExcel:SetExcelService,\r\n    private router:Router) {\r\n      console.log(\"Hello\");\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n  fileChanged(event) {\r\n    this.filesData = [];\r\n    this.fileNames = [];\r\n    let fileObject = {};\r\n    this.uploadedFile = event.target.files;\r\n    for (let file of this.uploadedFile) {\r\n      const fileName = file.name.replace('.json', '');\r\n      this.fileNames.push(fileName);\r\n      fileObject[fileName] = \"\";\r\n    }\r\n    for (let file of this.uploadedFile) {\r\n      const fileName = file.name.replace('.json', '');\r\n      this.readUploadedFile(file, fileName, fileObject);\r\n    }\r\n    this.router.navigate(['download']);\r\n  }\r\n  readUploadedFile(file, fileName, fileObject) {\r\n    let fileReader = new FileReader();\r\n    let fileContent: any = '';\r\n    fileReader.readAsText(file);\r\n    fileReader.onload = (e) => {\r\n      fileContent = fileReader.result;\r\n      this.keyValueService.getMultipleObjects(this.filesData, JSON.parse(fileContent), fileName, fileObject);\r\n      const newData = this.filesData.map(element => [element.key, ...Object.values(element.values)]);\r\n      tryCatch(this.setExcel.createSheetAndTable(newData, this.fileNames));\r\n    }\r\n  }\r\n}\r\nasync function tryCatch(callback) {\r\n  try {\r\n    await callback;\r\n  } catch (error) {\r\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\r\n    console.error(error);\r\n  }\r\n}\r\n","<div class=\"flex h-screen items-center text-center w-full\">\r\n  <div class=\"w-full\">\r\n    <div>\r\n      <i style=\"font-size: 150px\" class=\"ms-Icon ms-Icon--BulkUpload text-gray-300\"></i>\r\n      <div class=\"text-gray-700 text-xl\">Upload localized json files</div>\r\n    </div>\r\n\r\n    <div class=\"flex justify-around py-4\">\r\n      <button class=\"bg-blue-600 text-white hover:bg-blue-700 px-4 rounded py-2 flex\" (click)=\"fileInputCtrl.click()\">\r\n        <i class=\"ms-Icon ms-Icon--Upload mr-2\"></i>Upload\r\n      </button>\r\n    </div>\r\n    <input #fileInputCtrl style=\"visibility: hidden;\" type='file' accept=\".json\" (change)=\"fileChanged($event)\" multiple>\r\n    <!--p *ngFor='let fileName of uploadedFile'>\r\n    {{fileName.name}}\r\n  </p-->\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n/*platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));*/\nOffice.initialize = () => {\n  platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(error => console.error(error));\n};\n"],"sourceRoot":"webpack:///"}